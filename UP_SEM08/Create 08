#include <iostream>
using namespace std;

unsigned setBitZero(unsigned int number, unsigned int index) {
	unsigned int mask = 1;
	// 0000100000
	mask <<= index;
	// 1111011111
	mask = ~mask; // everywhere one apart from the index where you want to set 0

	// 0000100010
	// 1111011111
	// &
	// 0000000010
	return number & mask;
}

unsigned setBitToOne(unsigned number, unsigned index) {
	unsigned int mask = 1;
	// 0000100000
	mask <<= index; // everywhere zero apart from the index where you want to set 1

	// 0000100000
	// 1110000111
	// |
	// 1110100111
	return number | mask;
}

unsigned setBitValue(unsigned number, unsigned index, bool value) {
	return value
		? setBitToOne(number, index)
		: setBitZero(number, index);
}


	int main() {
		int number, position, bite;
		cin >> number>> position>> bite;
		cout << setBitValue(number, position, bite);
	}
